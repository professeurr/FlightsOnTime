logger.info("Mapping flights with the weather wban and timezone")
    Data = Data.join(airportWbanWrangling.Data, $"ORIGIN_AIRPORT_ID" === $"AirportId", "left_outer")
      .withColumnRenamed("WBAN", "ORIGIN_WBAN")
      .withColumnRenamed("TimeZone", "ORIGIN_TIMEZONE")
      .drop("AirportId")

    Data = Data.join(airportWbanWrangling.Data, $"DEST_AIRPORT_ID" === $"AirportId", "left_outer")
      .withColumnRenamed("WBAN", "DEST_WBAN")
      .withColumnRenamed("TimeZone", "DEST_TIMEZONE")
      .drop("AirportId")

    var missingWban1 = Data.select($"ORIGIN_AIRPORT_ID").where($"ORIGIN_WBAN".isNull)
      .distinct().orderBy($"ORIGIN_AIRPORT_ID").withColumnRenamed("ORIGIN_AIRPORT_ID", "id")
    var missingWban2 = Data.select($"DEST_AIRPORT_ID").where($"DEST_WBAN".isNull)
      .distinct().orderBy($"DEST_AIRPORT_ID").withColumnRenamed("DEST_AIRPORT_ID", "id")
    val missingWban = missingWban1.union(missingWban2).distinct()
    logger.info(s"airports with no corresponding wban: ${missingWban.count()}")
    missingWban.show(1000, truncate = true)

    Data = Data.where($"JOIN_WBAN".isNotNull)
      .drop("AirportId", "JOIN_WBAN")
    logger.info(Data.schema.treeString)
    logger.info(s"flights data after joining: ${Data.count()}")
    Data.show(truncate = false)


Data = Data.join(airportWbanWrangling.Data, $"MAPPING_WBAN" === $"WBAN", "outer")
      .withColumn("WEATHER_TIME", unix_timestamp(concat_ws("", $"Date", $"Time"), "yyyyMMddHHmm").minus($"TimeZone"))
    //.drop("Time", "MAPPING_WBAN", "Date")
    logger.info(s"airports without weather data: ${Data.where("WBAN is null").select("AirportId").distinct().count()}")
    logger.info(s"wbans without airports: ${Data.where("AirportID is null").select("WBAN").distinct().count()}")
    logger.info(s"weather data after the mapping: ${Data.count()}")