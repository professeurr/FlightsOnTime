== Physical Plan ==
InMemoryTableScan [FL_DEP_TIME#752L, FL_ARR_TIME#764L, FL_ONTIME#690, ORIGIN_WEATHER_TIME#1582, ORIGIN_WEATHER_COND#1584, DEST_WEATHER_TIME#1586, DEST_WEATHER_COND#1588]
   +- InMemoryRelation [FL_DEP_TIME#752L, FL_ARR_TIME#764L, FL_ONTIME#690, ORIGIN_WEATHER_TIME#1582, ORIGIN_WEATHER_COND#1584, DEST_WEATHER_TIME#1586, DEST_WEATHER_COND#1588], StorageLevel(disk, memory, deserialized, 1 replicas)
         +- ObjectHashAggregate(keys=[FL_ID#656, FL_DEP_TIME#752L, FL_ARR_TIME#764L, FL_ONTIME#690], functions=[collect_list(WEATHER_TIME#184L, 0, 0), collect_list(WEATHER_COND#439, 0, 0), collect_list(WEATHER_TIME#1130L, 0, 0), collect_list(WEATHER_COND#1127, 0, 0)])
            +- ObjectHashAggregate(keys=[FL_ID#656, FL_DEP_TIME#752L, FL_ARR_TIME#764L, knownfloatingpointnormalized(normalizenanandzero(FL_ONTIME#690)) AS FL_ONTIME#690], functions=[partial_collect_list(WEATHER_TIME#184L, 0, 0), partial_collect_list(WEATHER_COND#439, 0, 0), partial_collect_list(WEATHER_TIME#1130L, 0, 0), partial_collect_list(WEATHER_COND#1127, 0, 0)])
               +- Exchange hashpartitioning(FL_ID#656, 8), false, [id=#517]
                  +- *(9) Project [FL_ID#656, FL_DEP_TIME#752L, FL_ARR_TIME#764L, FL_ONTIME#690, WEATHER_TIME#184L, WEATHER_COND#439, WEATHER_TIME#1130L, WEATHER_COND#1127]
                     +- *(9) SortMergeJoin [DEST_AIRPORT_ID#526], [AIRPORTID#1132], Inner, ((WEATHER_TIME#1130L >= (FL_ARR_TIME#764L - 43200)) AND (WEATHER_TIME#1130L <= FL_ARR_TIME#764L))
                        :- *(6) Sort [DEST_AIRPORT_ID#526 ASC NULLS FIRST], false, 0
                        :  +- Exchange hashpartitioning(DEST_AIRPORT_ID#526, 8), true, [id=#501]
                        :     +- *(5) Project [FL_ID#656, FL_DEP_TIME#752L, FL_ARR_TIME#764L, DEST_AIRPORT_ID#526, FL_ONTIME#690, WEATHER_TIME#184L, WEATHER_COND#439]
                        :        +- *(5) SortMergeJoin [ORIGIN_AIRPORT_ID#525], [AIRPORTID#169], Inner, ((WEATHER_TIME#184L >= (FL_DEP_TIME#752L - 43200)) AND (WEATHER_TIME#184L <= FL_DEP_TIME#752L))
                        :           :- *(2) Sort [ORIGIN_AIRPORT_ID#525 ASC NULLS FIRST], false, 0
                        :           :  +- Exchange hashpartitioning(ORIGIN_AIRPORT_ID#525, 8), true, [id=#485]
                        :           :     +- *(1) Filter (((isnotnull(FL_DEP_TIME#752L) AND isnotnull(ORIGIN_AIRPORT_ID#525)) AND isnotnull(DEST_AIRPORT_ID#526)) AND isnotnull(FL_ARR_TIME#764L))
                        :           :        +- InMemoryTableScan [FL_ID#656, FL_DEP_TIME#752L, FL_ARR_TIME#764L, ORIGIN_AIRPORT_ID#525, DEST_AIRPORT_ID#526, FL_ONTIME#690], [isnotnull(FL_DEP_TIME#752L), isnotnull(ORIGIN_AIRPORT_ID#525), isnotnull(DEST_AIRPORT_ID#526), isnotnull(FL_ARR_TIME#764L)]
                        :           :              +- InMemoryRelation [FL_ID#656, FL_DEP_TIME#752L, FL_ARR_TIME#764L, ORIGIN_AIRPORT_ID#525, DEST_AIRPORT_ID#526, FL_ONTIME#690], StorageLevel(disk, memory, deserialized, 1 replicas)
                        :           :                    +- *(2) Project [FL_ID#656, (unix_timestamp(concat_ws(, FL_DATE#522, CRS_DEP_TIME#527), yyyy-MM-ddHHmm, Some(Europe/Paris)) - TimeZone#6L) AS FL_DEP_TIME#752L, cast((cast((unix_timestamp(concat_ws(, FL_DATE#522, CRS_DEP_TIME#527), yyyy-MM-ddHHmm, Some(Europe/Paris)) - TimeZone#6L) as double) + (cast(CRS_ELAPSED_TIME#531 as double) * 60.0)) as bigint) AS FL_ARR_TIME#764L, ORIGIN_AIRPORT_ID#525, DEST_AIRPORT_ID#526, FL_ONTIME#690]
                        :           :                       +- *(2) BroadcastHashJoin [ORIGIN_AIRPORT_ID#525], [AirportId#0], Inner, BuildRight
                        :           :                          :- *(2) Project [DEST_AIRPORT_ID#526, ORIGIN_AIRPORT_ID#525, CRS_ELAPSED_TIME#531, FL_DATE#522, CRS_DEP_TIME#527, concat_ws(_, OP_CARRIER_AIRLINE_ID#523, OP_CARRIER_FL_NUM#524, FL_DATE#522, ORIGIN_AIRPORT_ID#525, DEST_AIRPORT_ID#526) AS FL_ID#656, cast((cast(ARR_DELAY_NEW#528 as double) <= 15.0) as double) AS FL_ONTIME#690]
                        :           :                          :  +- *(2) Filter ((((isnotnull(CANCELLED#529) AND isnotnull(DIVERTED#530)) AND ((cast(CANCELLED#529 as double) + cast(DIVERTED#530 as double)) = 0.0)) AND ((cast(ARR_DELAY_NEW#528 as double) <= 15.0) OR ((cast(WEATHER_DELAY#532 as double) + cast(NAS_DELAY#533 as double)) >= 15.0))) AND isnotnull(ORIGIN_AIRPORT_ID#525))
                        :           :                          :     +- BatchScan[FL_DATE#522, OP_CARRIER_AIRLINE_ID#523, OP_CARRIER_FL_NUM#524, ORIGIN_AIRPORT_ID#525, DEST_AIRPORT_ID#526, CRS_DEP_TIME#527, ARR_DELAY_NEW#528, CANCELLED#529, DIVERTED#530, CRS_ELAPSED_TIME#531, WEATHER_DELAY#532, NAS_DELAY#533] CSVScan Location: InMemoryFileIndex[file:/home/masterai/dev/master_iasd/bigdata/project/flightsontime/data/flights/..., ReadSchema: struct<FL_DATE:string,OP_CARRIER_AIRLINE_ID:string,OP_CARRIER_FL_NUM:string,ORIGIN_AIRPORT_ID:str...
                        :           :                          +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#202]
                        :           :                             +- *(1) Project [AirportID#0, (TimeZone#2L * 3600) AS TimeZone#6L]
                        :           :                                +- *(1) Filter isnotnull(AirportID#0)
                        :           :                                   +- BatchScan[AirportID#0, TimeZone#2L] CSVScan Location: InMemoryFileIndex[file:/home/masterai/dev/master_iasd/bigdata/project/flightsontime/data/wban_air..., ReadSchema: struct<AirportID:string,TimeZone:bigint>
                        :           +- *(4) Sort [AIRPORTID#169 ASC NULLS FIRST], false, 0
                        :              +- Exchange hashpartitioning(AIRPORTID#169, 8), true, [id=#493]
                        :                 +- *(3) Filter (isnotnull(AIRPORTID#169) AND isnotnull(WEATHER_TIME#184L))
                        :                    +- InMemoryTableScan [AIRPORTID#169, WEATHER_TIME#184L, WEATHER_COND#439], [isnotnull(AIRPORTID#169), isnotnull(WEATHER_TIME#184L)]
                        :                          +- InMemoryRelation [AIRPORTID#169, WEATHER_TIME#184L, WEATHER_COND#439], StorageLevel(disk, memory, deserialized, 1 replicas)
                        :                                +- *(2) Project [AirportID#0 AS AIRPORTID#169, (unix_timestamp(concat_ws(, Date#29, Time#30), yyyyMMddHHmm, Some(Europe/Paris)) - TimeZone#6L) AS WEATHER_TIME#184L, UDF(named_struct(SkyConditionVect, UDF(UDF(SkyCondition#32, 0), 0), DryBulbCelsiusVect, UDF(UDF(DryBulbCelsius#40, 25.0, 50.0, 5), 1), WeatherTypeVect, UDF(UDF(WeatherType#36), 2), StationPressureVect, UDF(UDF(StationPressure#58, 10.0, -10.0, 5), 3), WindDirectionVect, UDF(CASE WHEN (WindDirection#54 = VR) THEN 11.0 WHEN (WindDirection#54 = 0) THEN 10.0 ELSE UDF(WindDirection#54, 45.0, 0.0, 11) END, 4), VisibilityVect, UDF(UDF(Visibility#34, 4.0, 0.0, 4), 5), RelativeHumidityVect, UDF(UDF(RelativeHumidity#50, 25.0, 0.0, 5), 6), WindSpeedVect, UDF(UDF(WindSpeed#52, 2.0, 0.0, 5), 7), SkyCondition1Vect, UDF(UDF(cast(UDF(SkyCondition#32, 0) as string), 1), 8), SkyCondition2Vect, UDF(UDF(cast(UDF(SkyCondition#32, 0) as string), 2), 9))) AS WEATHER_COND#439]
                        :                                   +- *(2) BroadcastHashJoin [WBAN#28], [STATION_WBAN#10], Inner, BuildRight
                        :                                      :- *(2) Project [WBAN#28, Date#29, Time#30, SkyCondition#32, DryBulbCelsius#40, WeatherType#36, StationPressure#58, WindDirection#54, Visibility#34, RelativeHumidity#50, WindSpeed#52]
                        :                                      :  +- *(2) Filter isnotnull(WBAN#28)
                        :                                      :     +- BatchScan[WBAN#28, Date#29, Time#30, SkyCondition#32, Visibility#34, WeatherType#36, DryBulbCelsius#40, RelativeHumidity#50, WindSpeed#52, WindDirection#54, StationPressure#58] CSVScan Location: InMemoryFileIndex[file:/home/masterai/dev/master_iasd/bigdata/project/flightsontime/data/weather/..., ReadSchema: struct<WBAN:string,Date:string,Time:string,SkyCondition:string,Visibility:string,WeatherType:stri...
                        :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true])), [id=#145]
                        :                                         +- *(1) Project [AirportID#0, WBAN#1 AS STATION_WBAN#10, (TimeZone#2L * 3600) AS TimeZone#6L]
                        :                                            +- *(1) Filter isnotnull(WBAN#1)
                        :                                               +- BatchScan[AirportID#0, WBAN#1, TimeZone#2L] CSVScan Location: InMemoryFileIndex[file:/home/masterai/dev/master_iasd/bigdata/project/flightsontime/data/wban_air..., ReadSchema: struct<AirportID:string,WBAN:string,TimeZone:bigint>
                        +- *(8) Sort [AIRPORTID#1132 ASC NULLS FIRST], false, 0
                           +- Exchange hashpartitioning(AIRPORTID#1132, 8), true, [id=#509]
                              +- *(7) Filter (isnotnull(WEATHER_TIME#1130L) AND isnotnull(AIRPORTID#1132))
                                 +- InMemoryTableScan [AIRPORTID#1132, WEATHER_TIME#1130L, WEATHER_COND#1127], [isnotnull(WEATHER_TIME#1130L), isnotnull(AIRPORTID#1132)]
                                       +- InMemoryRelation [AIRPORTID#1132, WEATHER_TIME#1130L, WEATHER_COND#1127], StorageLevel(disk, memory, deserialized, 1 replicas)
                                             +- *(2) Project [AirportID#0 AS AIRPORTID#169, (unix_timestamp(concat_ws(, Date#29, Time#30), yyyyMMddHHmm, Some(Europe/Paris)) - TimeZone#6L) AS WEATHER_TIME#184L, UDF(named_struct(SkyConditionVect, UDF(UDF(SkyCondition#32, 0), 0), DryBulbCelsiusVect, UDF(UDF(DryBulbCelsius#40, 25.0, 50.0, 5), 1), WeatherTypeVect, UDF(UDF(WeatherType#36), 2), StationPressureVect, UDF(UDF(StationPressure#58, 10.0, -10.0, 5), 3), WindDirectionVect, UDF(CASE WHEN (WindDirection#54 = VR) THEN 11.0 WHEN (WindDirection#54 = 0) THEN 10.0 ELSE UDF(WindDirection#54, 45.0, 0.0, 11) END, 4), VisibilityVect, UDF(UDF(Visibility#34, 4.0, 0.0, 4), 5), RelativeHumidityVect, UDF(UDF(RelativeHumidity#50, 25.0, 0.0, 5), 6), WindSpeedVect, UDF(UDF(WindSpeed#52, 2.0, 0.0, 5), 7), SkyCondition1Vect, UDF(UDF(cast(UDF(SkyCondition#32, 0) as string), 1), 8), SkyCondition2Vect, UDF(UDF(cast(UDF(SkyCondition#32, 0) as string), 2), 9))) AS WEATHER_COND#439]
                                                +- *(2) BroadcastHashJoin [WBAN#28], [STATION_WBAN#10], Inner, BuildRight
                                                   :- *(2) Project [WBAN#28, Date#29, Time#30, SkyCondition#32, DryBulbCelsius#40, WeatherType#36, StationPressure#58, WindDirection#54, Visibility#34, RelativeHumidity#50, WindSpeed#52]
                                                   :  +- *(2) Filter isnotnull(WBAN#28)
                                                   :     +- BatchScan[WBAN#28, Date#29, Time#30, SkyCondition#32, Visibility#34, WeatherType#36, DryBulbCelsius#40, RelativeHumidity#50, WindSpeed#52, WindDirection#54, StationPressure#58] CSVScan Location: InMemoryFileIndex[file:/home/masterai/dev/master_iasd/bigdata/project/flightsontime/data/weather/..., ReadSchema: struct<WBAN:string,Date:string,Time:string,SkyCondition:string,Visibility:string,WeatherType:stri...
                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true])), [id=#145]
                                                      +- *(1) Project [AirportID#0, WBAN#1 AS STATION_WBAN#10, (TimeZone#2L * 3600) AS TimeZone#6L]
                                                         +- *(1) Filter isnotnull(WBAN#1)
                                                            +- BatchScan[AirportID#0, WBAN#1, TimeZone#2L] CSVScan Location: InMemoryFileIndex[file:/home/masterai/dev/master_iasd/bigdata/project/flightsontime/data/wban_air..., ReadSchema: struct<AirportID:string,WBAN:string,TimeZone:bigint>
